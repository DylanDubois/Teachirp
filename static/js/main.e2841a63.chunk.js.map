{"version":3,"sources":["hoc/Aux.jsx","components/CourseTile/CourseTile.jsx","config/axios.js","config/Fire.js","containers/CoursesContainer/CoursesContainer.jsx","pages/Home.jsx","components/NavBar/NavBar.jsx","UI/ProgressBarRound/ProgressBarRound.jsx","components/TaskList/TaskList.jsx","components/AddAssignment/AddAssignment.jsx","components/CourseInfo/CourseInfo.jsx","components/AssignmentTile/AssignmentTile.jsx","containers/AssignmentsContainer/AssignmentsContainer.jsx","pages/CourseView.jsx","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","courseTile","progress","react_default","a","createElement","className","onClick","courseSelected","courseName","assignmentCount","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","axios","create","baseURL","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","CoursesContainer","state","courses","console","log","this","next","newp","setState","_this2","Object","keys","map","course","CourseTile_CourseTile","key","id","history","push","Component","withRouter","Home","user","name","Aux","Route","path","exact","render","containers_CoursesContainer_CoursesContainer","navBar","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","href","progressRound","rightProg","leftProg","transform","taskList","tasks","task","AddAssignment","estimatedTime","tmpTaskName","handleNameChange","event","_this","target","value","handleEstimationChange","handleTasksChange","handleTaskAddition","timeId","Date","getTime","complete","handleSubmit","preventDefault","submitAssignment","assignment","objectSpread","database","ref","courseId","update","tabIndex","aria-hidden","data-dismiss","aria-describedby","placeholder","onChange","TaskList","courseInfo","ProgressBarRound_ProgressBarRound","components_AddAssignment_AddAssignment","AssignmentTile","length","AssignmentsContainer","assignments","components_AssignmentTile_AssignmentTile","CourseView","CourseInfo","containers_AssignmentsContainer_AssignmentsContainer","App","selectedCourse","courseSelectedHandler","authListener","onAuthStateChanged","coursesListener","on","snap","val","signInWithPopup","then","res","catch","nextprops","BrowserRouter","NavBar_NavBar","src_pages_Home","src_pages_CourseView","window","location","pathname","includes","Redirect","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2841a63.chunk.js","sourcesContent":["const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\nimport \"./CourseTile.scss\";\n\nconst courseTile = props => {\n  const { progress } = props;\n\n  return (\n    <div className=\"col-md-4 col-sm-12 mb-4\" onClick={props.courseSelected}>\n      <div className=\"card bg-dark col-12 course\">\n        <div className=\"card-header text-primary border-bottom border-white\">\n          <h5>{props.courseName}</h5>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-white\">\n            {props.assignmentCount} Assignments\n          </h5>\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar-animated progress-bar-striped bg-primary\"\n              role=\"progressbar\"\n              aria-valuenow=\"10\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: progress + \"%\" }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default courseTile;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://teachirp.firebaseio.com/\"\n});\n\nexport default instance;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyCnZUngvfvS0AaP694Pvsyl0J_OKymFd4c\",\n  authDomain: \"teachirp.firebaseapp.com\",\n  databaseURL: \"https://teachirp.firebaseio.com\",\n  projectId: \"teachirp\",\n  storageBucket: \"teachirp.appspot.com\",\n  messagingSenderId: \"1011919166886\"\n};\n\nconst fire = firebase.initializeApp(config);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(res => {})\n    .catch(res => {});\n};\n\nexport default fire;\n","import React, { Component } from \"react\";\nimport CourseTile from \"../../components/CourseTile/CourseTile\";\nimport Aux from \"../../hoc/Aux\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"../../config/axios\";\nimport fire from \"../../config/Fire\";\n\nclass CoursesContainer extends Component {\n  state = {\n    courses: []\n  };\n\n  componentDidMount() {\n    console.log(this.props.courses);\n  }\n\n  shouldComponentUpdate(next, newp) {\n    if (next.courses !== newp.courses) this.setState({ courses: next.courses });\n    return true;\n  }\n\n  render() {\n    console.log(this.props.courses);\n    let courses = null;\n    if (this.state.courses) {\n      courses = Object.keys(this.state.courses).map(course => {\n        return (\n          <CourseTile\n            courseName={this.state.courses[course].courseName}\n            progress={this.state.courses[course].progress}\n            assignmentCount={this.state.courses[course].assignmentCount}\n            key={this.state.courses[course].id}\n            courseSelected={() => {\n              this.props.courseSelected(this.state.courses[course]);\n              this.props.history.push(\n                \"/course/\" + this.state.courses[course].id\n              );\n            }}\n          />\n        );\n      });\n    }\n\n    return (\n      <div className=\"container \">\n        <div className=\"row\">{courses}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CoursesContainer);\n","import React, { Component } from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport CoursesContainer from \"../containers/CoursesContainer/CoursesContainer\";\nimport \"./Home.scss\";\nimport { Route } from \"react-router-dom\";\n\nclass Home extends Component {\n  state = {\n    user: {\n      name: \"Dylan\"\n    },\n    courses: []\n  };\n\n  componentDidMount() {\n    this.setState({ courses: this.props.courses });\n  }\n\n  shouldComponentUpdate(next, newp) {\n    if (next.courses !== newp.courses) this.setState({ courses: next.courses });\n    return true;\n  }\n\n  render() {\n    console.log(\"home\", this.state.courses);\n    return (\n      <Aux>\n        <div className=\"jumbotron gradient jumbotron-fluid bg-dark text-white border-bottom border-primary\">\n          <div className=\"container\">\n            <h1 className=\"display-4 header\">\n              Welcome,{\" \"}\n              <span className=\"text-primary\">{this.state.user.name}</span>!\n            </h1>\n            <p className=\"lead\">See all that there is to do!</p>\n          </div>\n        </div>\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <CoursesContainer\n              courseSelected={this.props.courseSelected}\n              courses={this.props.courses}\n            />\n          )}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./NavBar.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst navBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark border-bottom border-primary header\">\n      <Link className=\"navbar-brand text-primary brand\" to=\"/\">\n        Teachirp\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Home <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/add-course\">\n              Add Course\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/history\">\n              History\n            </Link>\n          </li>\n          <li className=\"nav-item dropdown\">\n            <Link\n              className=\"nav-link dropdown-toggle\"\n              to=\"/\"\n              id=\"navbarDropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              data-target=\"#yungdropdown\"\n            >\n              Courses\n            </Link>\n            <div\n              className=\"dropdown-menu bg-dark\"\n              aria-labelledby=\"navbarDropdownMenuLink\"\n              id=\"yungdropdown\"\n            >\n              <a className=\"dropdown-item\" href=\"/\">\n                Action\n              </a>\n              <a className=\"dropdown-item\" href=\"/\">\n                Another action\n              </a>\n              <a className=\"dropdown-item\" href=\"/\">\n                Something else here\n              </a>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default navBar;\n","import React from \"react\";\nimport \"./ProgressBarRound.scss\";\n\nconst progressRound = props => {\n  const rightProg = props.progress >= 50 ? 180 : (props.progress / 50) * 180;\n  const leftProg = props.progress < 50 ? 0 : ((props.progress % 50) / 50) * 180;\n  return (\n    <div className=\"progress-cust blue mt-5\">\n      <span className=\"progress-cust-left\">\n        <span\n          className=\"progress-cust-bar\"\n          style={{ transform: \"rotate(\" + leftProg + \"deg)\" }}\n        />\n      </span>\n      <span className=\"progress-cust-right\">\n        <span\n          className=\"progress-cust-bar\"\n          style={{ transform: \"rotate(\" + rightProg + \"deg)\" }}\n        />\n      </span>\n      <div className=\"progress-cust-value\">{props.progress}%</div>\n    </div>\n  );\n};\n\nexport default progressRound;\n","import React from \"react\";\n\nconst taskList = props => {\n  if (!props.tasks) return null;\n  const tasks = props.tasks.map(task => {\n    return (\n      <div key={task.id} className=\"col-12\">\n        <h5 className=\"text-white\">{task.name}</h5>\n      </div>\n    );\n  });\n  return (\n    <div className=\"container mt-3 p-0\">\n      <div className=\"row text-left\">{tasks}</div>\n    </div>\n  );\n};\n\nexport default taskList;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport TaskList from \"../TaskList/TaskList\";\nimport axios from \"../../config/axios\";\nimport fire from \"../../config/Fire\";\n\nclass AddAssignment extends Component {\n  state = {\n    name: \"\",\n    estimatedTime: \"\",\n    tasks: [],\n    tmpTaskName: \"\"\n  };\n\n  handleNameChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleEstimationChange = event => {\n    this.setState({ estimatedTime: event.target.value });\n  };\n\n  handleTasksChange = event => {\n    this.setState({ tmpTaskName: event.target.value });\n  };\n\n  handleTaskAddition = () => {\n    if (!this.state.tmpTaskName) return;\n    const timeId = new Date().getTime() - 1550000000000;\n    const task = { name: this.state.tmpTaskName, complete: false, id: timeId };\n    const tasks = this.state.tasks;\n    tasks.push(task);\n    this.setState({ tmpTaskName: \"\", tasks: tasks });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  submitAssignment = () => {\n    const id = new Date().getTime() - 1550000000000;\n    const assignment = { ...this.state, id: id };\n    this.setState({\n      name: \"\",\n      estimatedTime: \"\",\n      tasks: [],\n      tmpTaskName: \"\"\n    });\n    const dbref = fire\n      .database()\n      .ref(\"/courses/\" + this.props.courseId + \"/assignments/\" + id);\n    dbref.update(assignment);\n    // axios\n    //   .post(\"/courses/\" + this.props.courseId + \"/\" + id + \".json\", assignment)\n    //   .then(res => console.log(res))\n    //   .catch(res => console.log(res));\n  };\n\n  render() {\n    return (\n      <Aux>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary mt-5\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n        >\n          Add Assignment\n        </button>\n\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content bg-dark\">\n              <div className=\"modal-header\">\n                <h4\n                  className=\"modal-title text-primary text-center header\"\n                  id=\"exampleModalLabel\"\n                >\n                  Add Assignment\n                </h4>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={() =>\n                    this.setState({\n                      name: \"\",\n                      estimatedTime: \"\",\n                      tasks: [],\n                      tmpTaskName: \"\"\n                    })\n                  }\n                >\n                  <span aria-hidden=\"true\" className=\"text-white\">\n                    &times;\n                  </span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form className=\"row\">\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      aria-describedby=\"name\"\n                      placeholder=\"Assignment name\"\n                      value={this.state.name}\n                      onChange={this.handleNameChange}\n                    />\n                  </div>\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"effort\"\n                      placeholder=\"Estimated time to complete\"\n                      value={this.state.estimatedTime}\n                      onChange={this.handleEstimationChange}\n                    />\n                  </div>\n                  <div className=\"col-12 row pr-0\">\n                    <div className=\"form-group col-10 m-0\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"task\"\n                        placeholder=\"Add Task\"\n                        value={this.state.tmpTaskName}\n                        onChange={this.handleTasksChange}\n                      />\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-primary col-2 btn-sm align-middle p-0\"\n                      onClick={this.handleTaskAddition}\n                    >\n                      <h4>+</h4>\n                    </button>\n                  </div>\n                </form>\n                <TaskList tasks={this.state.tasks} />\n              </div>\n              <div className=\"modal-footer text-center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary header\"\n                  data-dismiss=\"modal\"\n                  onClick={this.submitAssignment}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default AddAssignment;\n","import React from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport ProgressBarRound from \"../../UI/ProgressBarRound/ProgressBarRound\";\nimport AddModal from \"../AddAssignment/AddAssignment\";\n\nconst courseInfo = props => {\n  const course = props.course;\n  return (\n    <div className=\"col-md-3 col-sm-12 bg-dark pt-5 text-center pt-sm-0\">\n      {course && (\n        <Aux>\n          <h1 className=\"text-primary display-4 mt-5 header\">\n            {course.courseName}\n          </h1>\n          <ProgressBarRound progress={course.progress} />\n          <AddModal courseId={course.id} />\n        </Aux>\n      )}\n    </div>\n  );\n};\n\nexport default courseInfo;\n","import React, { Component } from \"react\";\n\nclass AssignmentTile extends Component {\n  state = {\n    name: \"Homework 1\",\n    tasks: [\"wow\", \"hey\"],\n    progress: 50,\n    id: 1\n  };\n\n  componentDidMount() {\n    const assignment = this.props.assignment;\n    console.log(assignment);\n    this.setState({\n      name: assignment.name,\n      tasks: assignment.tasks,\n      progress: assignment.progress,\n      id: assignment.id\n    });\n  }\n  render() {\n    return (\n      <div className=\"col-md-4 col-sm-12 mb-4\">\n        <div className=\"card bg-dark col-12 course\">\n          <div className=\"card-header text-primary border-bottom border-white header\">\n            <h4>{this.state.name}</h4>\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-white\">\n              {this.state.tasks.length} Tasks\n            </h5>\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar-animated progress-bar-striped bg-primary\"\n                role=\"progressbar\"\n                aria-valuenow=\"10\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ width: this.state.progress + \"%\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssignmentTile;\n","import React, { Component } from \"react\";\nimport Assignment from \"../../components/AssignmentTile/AssignmentTile\";\nimport \"./AssignmentsContainer.scss\";\n\nclass AssignmentsContainer extends Component {\n  state = {\n    assignments: []\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  shouldComponentUpdate(next, newp) {\n    if (next.assignments !== newp.assignments)\n      this.setState({ assignments: next.assignments });\n    return true;\n  }\n\n  render() {\n    let assignments = <h5>No Assignments</h5>;\n    if (this.props.course.assignments) {\n      assignments = Object.keys(this.props.course.assignments).map(\n        assignment => {\n          return (\n            <Assignment\n              assignment={this.props.course.assignments[assignment]}\n              key={this.props.course.assignments[assignment].id}\n            />\n          );\n        }\n      );\n    }\n    return (\n      <div className=\"col-md-9 col-sm-12 p-0\">\n        <div className=\"container-fluid\">\n          <div className=\"row gradient mb-3\">\n            <h1 className=\"display-4 text-primary pt-5 pb-5 header\">\n              Assignments\n            </h1>\n          </div>\n          <div className=\"row\">{assignments}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssignmentsContainer;\n","import React, { Component } from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport CourseInfo from \"../components/CourseInfo/CourseInfo\";\nimport AssignmentsContainer from \"../containers/AssignmentsContainer/AssignmentsContainer\";\nimport \"./CourseView.scss\";\n\nclass CourseView extends Component {\n  state = {\n    course: null\n  };\n\n  render() {\n    return (\n      <Aux>\n        <div className=\"container-fluid\">\n          <div className=\"row course-view\">\n            <CourseInfo course={this.props.course} />\n            <AssignmentsContainer course={this.props.course} />\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default CourseView;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Home from \"./pages/Home\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport CourseView from \"./pages/CourseView\";\nimport fire, { signInWithGoogle } from \"./config/Fire\";\n\nclass App extends Component {\n  state = {\n    selectedCourse: null,\n    user: null,\n    courses: null\n  };\n\n  componentDidMount() {\n    this.authListener();\n    this.coursesListener();\n    signInWithGoogle();\n  }\n\n  componentDidUpdate(nextprops) {\n    console.log(\"update\", this.state.courses);\n  }\n\n  courseSelectedHandler = course => {\n    this.setState({ selectedCourse: course });\n  };\n\n  authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      console.log(user);\n      if (user) this.setState({ user });\n      else this.setState({ user: null });\n    });\n  };\n\n  coursesListener = () => {\n    const dbref = fire.database().ref(\"/courses/\");\n    dbref.on(\"value\", snap => {\n      this.setState({ courses: snap.val() });\n    });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"h-100\">\n          <NavBar />\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Home\n                courseSelected={this.courseSelectedHandler}\n                courses={this.state.courses}\n              />\n            )}\n          />\n          {this.state.selectedCourse && (\n            <Route\n              path=\"/course\"\n              render={() => <CourseView course={this.state.selectedCourse} />}\n            />\n          )}\n          {window.location.pathname.includes(\"course\") &&\n            !this.state.selectedCourse && <Redirect to=\"/\" />}\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}