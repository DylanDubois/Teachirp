{"version":3,"sources":["hoc/Aux.jsx","components/CourseTile/CourseTile.jsx","config/axios.js","config/Fire.js","containers/CoursesContainer/CoursesContainer.jsx","components/AddCourse/AddCourse.jsx","pages/Home.jsx","pages/Welcome/Welcome.jsx","components/NavBar/NavBar.jsx","UI/ProgressBarRound/ProgressBarRound.jsx","components/TaskList/TaskList.jsx","components/AddAssignment/AddAssignment.jsx","components/CourseInfo/CourseInfo.jsx","components/AssignmentTile/AssignmentTile.jsx","components/AssignmentView/AssignmentView.jsx","containers/AssignmentsContainer/AssignmentsContainer.jsx","pages/CourseView.jsx","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","courseTile","progress","react_default","a","createElement","className","onClick","courseSelected","courseName","assignmentCount","axios","create","baseURL","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","res","catch","signOut","CoursesContainer","state","courses","next","newp","this","setState","_this2","Object","keys","map","course","assignments","length","CourseTile_CourseTile","name","key","id","history","push","Component","withRouter","AddCourse","tmpTaskName","handleNameChange","event","_this","target","value","handleSubmit","preventDefault","submitCourse","Date","getTime","database","ref","uid","update","Aux","type","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","aria-describedby","placeholder","onChange","Home","user","displayName","console","log","userId","userName","split","components_AddCourse_AddCourse","Route","path","exact","render","containers_CoursesContainer_CoursesContainer","welcomePage","welcomeButton","Link","to","signIn","userSignedIn","navBar","aria-controls","aria-expanded","aria-haspopup","href","progressRound","rightProg","leftProg","style","transform","taskList","tasks","task","index","checkColor","complete","updateTask","AddAssignment","estimatedTime","handleEstimationChange","handleTasksChange","handleTaskAddition","timeId","submitAssignment","assignment","objectSpread","courseId","TaskList_TaskList","courseInfo","ProgressBarRound_ProgressBarRound","components_AddAssignment_AddAssignment","AssignmentTile","filter","assignmentSelected","aria-valuenow","aria-valuemin","aria-valuemax","width","AssignmentsContainer","selectedAssignment","$","modal","components_AssignmentTile_AssignmentTile","AssignmentView","CourseView","dbref","coursesListener","on","snap","calculateCourseProgress","val","off","numTasks","completeTasks","assignmentKeys","i","Math","round","CourseInfo","containers_AssignmentsContainer_AssignmentsContainer","App","selectedCourse","courseSelectedHandler","authListener","onAuthStateChanged","newUser","nextprops","signedIn","BrowserRouter","basename","process","NavBar_NavBar","window","location","pathname","includes","Redirect","Switch","Welcome","src_pages_Home","src_pages_CourseView","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9954f40a.chunk.js","sourcesContent":["const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\nimport \"./CourseTile.scss\";\n\nconst courseTile = props => {\n  const { progress } = props;\n\n  return (\n    <div className=\"col-md-4 col-sm-12 mb-4\" onClick={props.courseSelected}>\n      <div className=\"card bg-dark col-12 course\">\n        <div className=\"card-header text-primary border-bottom border-white\">\n          <h5>{props.courseName}</h5>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-white\">\n            {props.assignmentCount}\n            {props.assignmentCount !== 1 ? \" Assignments\" : \" Assignment\"}\n          </h5>\n          {/* <div className=\"progress\">\n            <div\n              className=\"progress-bar-animated progress-bar-striped bg-primary\"\n              role=\"progressbar\"\n              aria-valuenow=\"10\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: progress + \"%\" }}\n            />\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default courseTile;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://teachirp.firebaseio.com/\"\n});\n\nexport default instance;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyCnZUngvfvS0AaP694Pvsyl0J_OKymFd4c\",\n  authDomain: \"teachirp.firebaseapp.com\",\n  databaseURL: \"https://teachirp.firebaseio.com\",\n  projectId: \"teachirp\",\n  storageBucket: \"teachirp.appspot.com\",\n  messagingSenderId: \"1011919166886\"\n};\n\nconst fire = firebase.initializeApp(config);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(res => {})\n    .catch(res => {});\n};\n\nexport const signOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(res => {})\n    .catch(res => {});\n};\n\nexport default fire;\n","import React, { Component } from \"react\";\nimport CourseTile from \"../../components/CourseTile/CourseTile\";\nimport Aux from \"../../hoc/Aux\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"../../config/axios\";\nimport fire from \"../../config/Fire\";\n\nclass CoursesContainer extends Component {\n  state = {\n    courses: []\n  };\n\n  componentDidMount() {}\n\n  shouldComponentUpdate(next, newp) {\n    if (next.courses !== newp.courses) this.setState({ courses: next.courses });\n    return true;\n  }\n\n  render() {\n    let courses = null;\n    if (this.state.courses) {\n      courses = Object.keys(this.state.courses).map(course => {\n        const assignmentCount = this.state.courses[course].assignments\n          ? Object.keys(this.state.courses[course].assignments).length\n          : 0;\n        return (\n          <CourseTile\n            courseName={this.state.courses[course].name}\n            key={this.state.courses[course].id}\n            assignmentCount={assignmentCount}\n            courseSelected={() => {\n              this.props.courseSelected(this.state.courses[course]);\n              this.props.history.push(\n                \"/course/\" + this.state.courses[course].id\n              );\n            }}\n          />\n        );\n      });\n    }\n\n    return (\n      <div className=\"container \">\n        <div className=\"row\">{courses}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CoursesContainer);\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport axios from \"../../config/axios\";\nimport fire from \"../../config/Fire\";\n\nclass AddCourse extends Component {\n  state = {\n    name: \"\",\n    tmpTaskName: \"\"\n  };\n\n  handleNameChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  submitCourse = () => {\n    const id = new Date().getTime() - 1550000000000;\n    const course = { name: this.state.name, id: id };\n    this.setState({\n      name: \"\"\n    });\n    const dbref = fire\n      .database()\n      .ref(\"/users/\" + this.props.uid + \"/courses/\" + id);\n    dbref.update(course);\n  };\n\n  render() {\n    return (\n      <Aux>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary btn-lg\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n        >\n          Add Course\n        </button>\n\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content bg-dark\">\n              <div className=\"modal-header\">\n                <h4\n                  className=\"modal-title text-primary text-center header\"\n                  id=\"exampleModalLabel\"\n                >\n                  Add Course\n                </h4>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={() =>\n                    this.setState({\n                      name: \"\",\n                      tmpTaskName: \"\"\n                    })\n                  }\n                >\n                  <span aria-hidden=\"true\" className=\"text-white\">\n                    &times;\n                  </span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form className=\"row\">\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      aria-describedby=\"name\"\n                      placeholder=\"Course name\"\n                      value={this.state.name}\n                      onChange={this.handleNameChange}\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer text-center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary header\"\n                  data-dismiss=\"modal\"\n                  onClick={this.submitCourse}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default AddCourse;\n","import React, { Component } from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport CoursesContainer from \"../containers/CoursesContainer/CoursesContainer\";\nimport \"./Home.scss\";\nimport { Route } from \"react-router-dom\";\nimport AddCourseModal from \"../components/AddCourse/AddCourse\";\n\nclass Home extends Component {\n  state = {\n    user: {\n      displayName: \"Dylan\"\n    },\n    courses: []\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    this.setState({\n      courses: this.props.courses\n    });\n  }\n\n  shouldComponentUpdate(next, newp) {\n    if (next.courses !== newp.courses) this.setState({ courses: next.courses });\n    if (next.user !== newp.user) this.setState({ user: next.user });\n    return true;\n  }\n\n  render() {\n    const userId = this.props.user ? this.props.user.uid : null;\n    const userName = this.state.user\n      ? this.state.user.displayName.split(\" \")[0]\n      : \"  \";\n    return (\n      <Aux>\n        <div className=\"jumbotron gradient jumbotron-fluid bg-dark text-white border-bottom border-primary\">\n          <div className=\"container\">\n            <h1 className=\"display-4 header\">\n              Welcome, <span className=\"text-primary\">{userName}</span>!\n            </h1>\n            <p className=\"lead\">See all that there is to do!</p>\n            <AddCourseModal uid={userId} />\n          </div>\n        </div>\n        <Route\n          path=\"/dashboard\"\n          exact\n          render={() => (\n            <CoursesContainer\n              courseSelected={this.props.courseSelected}\n              courses={this.props.courses}\n            />\n          )}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport { Link } from \"react-router-dom\";\n\nconst welcomePage = props => {\n  let welcomeButton = (\n    <Link\n      className=\"btn btn-outline-primary btn-lg mt-3 header\"\n      role=\"button\"\n      to=\"/\"\n      onClick={props.signIn}\n    >\n      Get Started\n    </Link>\n  );\n\n  if (props.userSignedIn) {\n    welcomeButton = (\n      <Link\n        className=\"btn btn-outline-primary btn-lg mt-3 header\"\n        role=\"button\"\n        to=\"/dashboard\"\n      >\n        View Dashboard\n      </Link>\n    );\n  }\n  return (\n    <Aux>\n      <div className=\"jumbotron gradient jumbotron-fluid bg-dark text-white border-bottom border-primary\">\n        <div className=\"container\">\n          <h1 className=\"display-2 brand text-primary\">Teachirp</h1>\n          <p className=\"lead\">Your courses, made easy!</p>\n          <p className=\"lead\">{welcomeButton}</p>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 col-12\">\n            <h1>Feature 1</h1>\n          </div>\n          <div className=\"col-sm-4 col-12\">\n            <h1>Feature 2</h1>\n          </div>\n          <div className=\"col-sm-4 col-12\">\n            <h1>Feature 3</h1>\n          </div>\n        </div>\n      </div>\n    </Aux>\n  );\n};\n\nexport default welcomePage;\n","import React from \"react\";\nimport \"./NavBar.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst navBar = props => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark border-bottom border-primary header\">\n      <Link className=\"navbar-brand text-primary brand\" to=\"/\">\n        Teachirp\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Home <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/add-course\">\n              Add Course\n            </Link>\n          </li> */}\n          <li className=\"nav-item dropdown\">\n            <Link\n              className=\"nav-link dropdown-toggle\"\n              to=\"/\"\n              id=\"navbarDropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              data-target=\"#yungdropdown\"\n            >\n              Courses\n            </Link>\n            <div\n              className=\"dropdown-menu bg-dark\"\n              aria-labelledby=\"navbarDropdownMenuLink\"\n              id=\"yungdropdown\"\n            >\n              <a className=\"dropdown-item\" href=\"/\">\n                Action\n              </a>\n              <a className=\"dropdown-item\" href=\"/\">\n                Another action\n              </a>\n              <a className=\"dropdown-item\" href=\"/\">\n                Something else here\n              </a>\n            </div>\n          </li>\n        </ul>\n        {props.user && (\n          <div className=\"profile-dropdown\">\n            <ul className=\"navbar-nav float-r-dt\">\n              <li className=\"nav-item dropdown\">\n                <Link\n                  className=\"nav-link dropdown-toggle\"\n                  to=\"/\"\n                  id=\"navbarDropdownMenuLink\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  data-target=\"#profiledropdown\"\n                >\n                  {props.user.displayName}\n                </Link>\n                <div\n                  className=\"dropdown-menu bg-dark\"\n                  aria-labelledby=\"navbarDropdownMenuLink\"\n                  id=\"profiledropdown\"\n                >\n                  <Link className=\"dropdown-item\" to=\"/\">\n                    Action\n                  </Link>\n                  <Link className=\"dropdown-item\" to=\"/\">\n                    Another action\n                  </Link>\n                  <Link\n                    className=\"dropdown-item\"\n                    to=\"/\"\n                    onClick={props.signOut}\n                  >\n                    Sign-Out\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default navBar;\n","import React from \"react\";\nimport \"./ProgressBarRound.scss\";\n\nconst progressRound = props => {\n  const rightProg = props.progress >= 50 ? 180 : (props.progress / 50) * 180;\n  const leftProg = props.progress < 50 ? 0 : ((props.progress - 50) / 50) * 180;\n  return (\n    <div className=\"progress-cust blue mt-5\">\n      <span className=\"progress-cust-left\">\n        <span\n          className=\"progress-cust-bar\"\n          style={{ transform: \"rotate(\" + leftProg + \"deg)\" }}\n        />\n      </span>\n      <span className=\"progress-cust-right\">\n        <span\n          className=\"progress-cust-bar\"\n          style={{ transform: \"rotate(\" + rightProg + \"deg)\" }}\n        />\n      </span>\n      <div className=\"progress-cust-value\">\n        {props.progress ? props.progress : 0}%\n      </div>\n    </div>\n  );\n};\n\nexport default progressRound;\n","import React from \"react\";\nimport \"./TaskList.scss\";\n\nconst taskList = props => {\n  if (!props.tasks) return null;\n  const tasks = props.tasks.map((task, index) => {\n    const checkColor = task.complete ? \"check blue-check\" : \"check\";\n    return (\n      <div key={task.id} className=\"col-12 mb-2\">\n        <div className=\"row\">\n          <div\n            className=\"col-1 check-box\"\n            onClick={() => {\n              props.updateTask(index);\n            }}\n          >\n            <div className={checkColor} />\n          </div>\n          <h5 className=\"text-white col-11\">{task.name}</h5>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <div className=\"container mt-3 p-0\">\n      <div className=\"row text-left\">{tasks}</div>\n    </div>\n  );\n};\n\nexport default taskList;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport TaskList from \"../TaskList/TaskList\";\nimport axios from \"../../config/axios\";\nimport fire from \"../../config/Fire\";\n\nclass AddAssignment extends Component {\n  state = {\n    name: \"\",\n    estimatedTime: \"\",\n    tasks: [],\n    tmpTaskName: \"\"\n  };\n\n  handleNameChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleEstimationChange = event => {\n    this.setState({ estimatedTime: event.target.value });\n  };\n\n  handleTasksChange = event => {\n    this.setState({ tmpTaskName: event.target.value });\n  };\n\n  updateTask = task => {\n    const tasks = this.state.tasks;\n    tasks[task].complete = !tasks[task].complete;\n    this.setState({ tasks });\n  };\n\n  handleTaskAddition = () => {\n    if (!this.state.tmpTaskName) return;\n    const timeId = new Date().getTime() - 1550000000000;\n    const task = { name: this.state.tmpTaskName, complete: false, id: timeId };\n    const tasks = this.state.tasks;\n    tasks.push(task);\n    this.setState({ tmpTaskName: \"\", tasks: tasks });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  submitAssignment = () => {\n    const id = new Date().getTime() - 1550000000000;\n    const assignment = { ...this.state, id: id, progress: 0 };\n    this.setState({\n      name: \"\",\n      estimatedTime: \"\",\n      tasks: [],\n      tmpTaskName: \"\"\n    });\n    const dbref = fire\n      .database()\n      .ref(\n        \"users/\" +\n          this.props.uid +\n          \"/courses/\" +\n          this.props.courseId +\n          \"/assignments/\" +\n          id\n      );\n    dbref.update(assignment);\n    // axios\n    //   .post(\"/courses/\" + this.props.courseId + \"/\" + id + \".json\", assignment)\n    //   .then(res => console.log(res))\n    //   .catch(res => console.log(res));\n  };\n\n  render() {\n    return (\n      <Aux>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary mt-5\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n        >\n          Add Assignment\n        </button>\n\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content bg-dark\">\n              <div className=\"modal-header\">\n                <h4\n                  className=\"modal-title text-primary text-center header\"\n                  id=\"exampleModalLabel\"\n                >\n                  Add Assignment\n                </h4>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={() =>\n                    this.setState({\n                      name: \"\",\n                      estimatedTime: \"\",\n                      tasks: [],\n                      tmpTaskName: \"\"\n                    })\n                  }\n                >\n                  <span aria-hidden=\"true\" className=\"text-white\">\n                    &times;\n                  </span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form className=\"row\">\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      aria-describedby=\"name\"\n                      placeholder=\"Assignment name\"\n                      value={this.state.name}\n                      onChange={this.handleNameChange}\n                    />\n                  </div>\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"effort\"\n                      placeholder=\"Estimated time to complete\"\n                      value={this.state.estimatedTime}\n                      onChange={this.handleEstimationChange}\n                    />\n                  </div>\n                  <div className=\"col-12 row pr-0\">\n                    <div className=\"form-group col-10 m-0\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"task\"\n                        placeholder=\"Add Task\"\n                        value={this.state.tmpTaskName}\n                        onChange={this.handleTasksChange}\n                      />\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-primary col-2 btn-sm align-middle p-0\"\n                      onClick={this.handleTaskAddition}\n                    >\n                      <h4>+</h4>\n                    </button>\n                  </div>\n                </form>\n                <TaskList\n                  tasks={this.state.tasks}\n                  updateTask={this.updateTask}\n                />\n              </div>\n              <div className=\"modal-footer text-center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary header\"\n                  data-dismiss=\"modal\"\n                  onClick={this.submitAssignment}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default AddAssignment;\n","import React from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport ProgressBarRound from \"../../UI/ProgressBarRound/ProgressBarRound\";\nimport AddModal from \"../AddAssignment/AddAssignment\";\n\nconst courseInfo = props => {\n  const course = props.course;\n  return (\n    <div className=\"col-md-3 col-sm-12 bg-dark pt-5 text-center pt-sm-0\">\n      {course && (\n        <Aux>\n          <h1 className=\"text-primary display-4 mt-5 header\">{course.name}</h1>\n          <ProgressBarRound progress={props.progress} />\n          <AddModal courseId={course.id} uid={props.uid} />\n        </Aux>\n      )}\n    </div>\n  );\n};\n\nexport default courseInfo;\n","import React, { Component } from \"react\";\n\nclass AssignmentTile extends Component {\n  state = {\n    name: \"Homework 1\",\n    tasks: [],\n    progress: 0,\n    id: 1\n  };\n\n  componentDidMount() {\n    const assignment = this.props.assignment;\n    let progress = 0;\n    if (this.props.assignment.tasks) {\n      progress =\n        (this.props.assignment.tasks.filter(task => {\n          return task.complete === true;\n        }).length /\n          this.props.assignment.tasks.length) *\n        100;\n    }\n    this.setState({\n      name: assignment.name,\n      tasks: assignment.tasks,\n      progress: progress,\n      id: assignment.id\n    });\n  }\n\n  componentWillReceiveProps(next) {\n    if (next.assignment !== this.state) {\n      const assignment = next.assignment;\n      let progress = 0;\n      if (next.assignment.tasks) {\n        progress =\n          (next.assignment.tasks.filter(task => {\n            return task.complete === true;\n          }).length /\n            next.assignment.tasks.length) *\n          100;\n      }\n      this.setState({\n        name: assignment.name,\n        tasks: assignment.tasks,\n        progress: progress,\n        id: assignment.id\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"col-md-4 col-sm-12 mb-4\">\n        <div\n          className=\"card bg-dark col-12 course\"\n          onClick={this.props.assignmentSelected}\n        >\n          <div className=\"card-header text-primary border-bottom border-white header\">\n            <h4>{this.state.name}</h4>\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-white\">\n              {this.state.tasks ? this.state.tasks.length : 0} Tasks\n            </h5>\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar-animated progress-bar-striped bg-primary\"\n                role=\"progressbar\"\n                aria-valuenow=\"10\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ width: this.state.progress + \"%\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssignmentTile;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport TaskList from \"../TaskList/TaskList\";\nimport fire from \"../../config/Fire\";\n\nclass AssignmentTile extends Component {\n  state = {\n    name: \"Assignment\",\n    tasks: [],\n    tmpTaskName: \"\"\n  };\n\n  componentWillReceiveProps(next) {\n    if (next.assignment !== this.state) this.setState({ ...next.assignment });\n  }\n\n  handleNameChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleEstimationChange = event => {\n    this.setState({ estimatedTime: event.target.value });\n  };\n\n  handleTasksChange = event => {\n    this.setState({ tmpTaskName: event.target.value });\n  };\n\n  handleTaskAddition = () => {\n    if (!this.state.tmpTaskName) return;\n    const timeId = new Date().getTime() - 1550000000000;\n    const task = { name: this.state.tmpTaskName, complete: false, id: timeId };\n    const tasks = this.state.tasks;\n    tasks.push(task);\n    this.setState({ tmpTaskName: \"\", tasks: tasks });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  updateTask = task => {\n    const tasks = this.state.tasks;\n    tasks[task].complete = !tasks[task].complete;\n    this.setState({ tasks });\n  };\n\n  submitAssignment = () => {\n    const assignment = { ...this.state };\n    this.setState({\n      name: \"\",\n      estimatedTime: \"\",\n      tasks: [],\n      tmpTaskName: \"\"\n    });\n    const dbref = fire\n      .database()\n      .ref(\n        \"users/\" +\n          this.props.uid +\n          \"/courses/\" +\n          this.props.courseId +\n          \"/assignments/\" +\n          this.state.id\n      );\n    dbref.update(assignment);\n    // axios\n    //   .post(\"/courses/\" + this.props.courseId + \"/\" + id + \".json\", assignment)\n    //   .then(res => console.log(res))\n    //   .catch(res => console.log(res));\n  };\n\n  render() {\n    return (\n      <Aux>\n        <div\n          className=\"modal fade\"\n          id=\"assignmentModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content bg-dark\">\n              <div className=\"modal-header\">\n                <h4\n                  className=\"modal-title text-primary text-center header\"\n                  id=\"exampleModalLabel\"\n                >\n                  {this.state.name}\n                </h4>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={() =>\n                    this.setState({\n                      name: \"\",\n                      estimatedTime: \"\",\n                      tasks: [],\n                      tmpTaskName: \"\"\n                    })\n                  }\n                >\n                  <span aria-hidden=\"true\" className=\"text-white\">\n                    &times;\n                  </span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form className=\"row\">\n                  <div className=\"col-12 row pr-0\">\n                    <div className=\"form-group col-10 m-0\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"task\"\n                        placeholder=\"Add Task\"\n                        value={this.state.tmpTaskName}\n                        onChange={this.handleTasksChange}\n                      />\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-primary col-2 btn-sm align-middle p-0\"\n                      onClick={this.handleTaskAddition}\n                    >\n                      <h4>+</h4>\n                    </button>\n                  </div>\n                </form>\n                <TaskList\n                  tasks={this.state.tasks}\n                  updateTask={this.updateTask}\n                />\n              </div>\n              <div className=\"modal-footer text-center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary header\"\n                  data-dismiss=\"modal\"\n                  onClick={this.submitAssignment}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default AssignmentTile;\n","import React, { Component } from \"react\";\nimport Assignment from \"../../components/AssignmentTile/AssignmentTile\";\nimport \"./AssignmentsContainer.scss\";\nimport AssignmentView from \"../../components/AssignmentView/AssignmentView\";\nimport $ from \"jquery\";\n\nclass AssignmentsContainer extends Component {\n  state = {\n    assignments: [],\n    selectedAssignment: {\n      name: \"Assignment\"\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.course && this.props.course.assignments)\n      this.setState({ assignments: this.props.course.assignments });\n  }\n\n  componentWillReceiveProps(next) {\n    if (next.course.assignments !== this.state.assignments)\n      this.setState({ assignments: next.course.assignments });\n  }\n\n  assignmentSelected = assignment => {\n    this.setState({ selectedAssignment: assignment });\n    $(\"#assignmentModal\").modal(\"show\");\n  };\n\n  render() {\n    let assignments = <h5>No Assignments</h5>;\n    if (this.state.assignments) {\n      assignments = Object.keys(this.state.assignments).map(assignment => {\n        return (\n          <Assignment\n            assignment={this.state.assignments[assignment]}\n            key={this.state.assignments[assignment].id}\n            assignmentSelected={() =>\n              this.assignmentSelected(this.state.assignments[assignment])\n            }\n          />\n        );\n      });\n    }\n    return (\n      <div className=\"col-md-9 col-sm-12 p-0\">\n        <div className=\"container-fluid\">\n          <div className=\"row gradient mb-3\">\n            <h1 className=\"display-4 text-primary pt-5 pb-5 header\">\n              Assignments\n            </h1>\n          </div>\n          <div className=\"row\">{assignments}</div>\n        </div>\n        <AssignmentView\n          assignment={this.state.selectedAssignment}\n          uid={this.props.uid}\n          courseId={this.props.course.id}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AssignmentsContainer;\n","import React, { Component } from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport CourseInfo from \"../components/CourseInfo/CourseInfo\";\nimport AssignmentsContainer from \"../containers/AssignmentsContainer/AssignmentsContainer\";\nimport \"./CourseView.scss\";\nimport fire from \"../config/Fire\";\n\nclass CourseView extends Component {\n  state = {\n    course: {\n      id: 0\n    }\n  };\n\n  dbref = null;\n\n  componentDidMount() {\n    this.setState({ course: this.props.course });\n    this.coursesListener();\n  }\n\n  coursesListener = () => {\n    const uid = this.props.uid ? this.props.uid : null;\n    this.dbref = fire\n      .database()\n      .ref(\"users/\" + uid + \"/courses/\" + this.props.course.id);\n    this.dbref.on(\"value\", snap => {\n      this.calculateCourseProgress(snap.val());\n    });\n  };\n\n  componentWillUnmount() {\n    if (this.dbref) this.dbref.off();\n  }\n\n  calculateCourseProgress(course) {\n    if (!course.assignments) return 0;\n    let numTasks = 0;\n    let completeTasks = 0;\n    const assignmentKeys = Object.keys(course.assignments);\n    for (let i = 0; i < assignmentKeys.length; i++) {\n      if (!course.assignments[assignmentKeys[i]].tasks) continue;\n      completeTasks += course.assignments[assignmentKeys[i]].tasks.filter(\n        task => {\n          return task.complete === true;\n        }\n      ).length;\n      numTasks += course.assignments[assignmentKeys[i]].tasks.length;\n    }\n    this.setState({\n      course: course,\n      progress: Math.round((completeTasks / numTasks) * 100)\n    });\n  }\n\n  render() {\n    return (\n      <Aux>\n        <div className=\"container-fluid\">\n          <div className=\"row course-view\">\n            <CourseInfo\n              course={this.state.course}\n              uid={this.props.uid}\n              progress={this.state.progress}\n            />\n            <AssignmentsContainer\n              course={this.state.course}\n              uid={this.props.uid}\n            />\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default CourseView;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Home from \"./pages/Home\";\nimport WelcomePage from \"./pages/Welcome/Welcome\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport CourseView from \"./pages/CourseView\";\nimport fire, { signInWithGoogle, signOut } from \"./config/Fire\";\n\nclass App extends Component {\n  state = {\n    selectedCourse: null,\n    user: null,\n    courses: null\n  };\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  componentDidUpdate(nextprops) {}\n\n  courseSelectedHandler = course => {\n    this.setState({ selectedCourse: course });\n  };\n\n  authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        const newUser = { uid: user.uid, displayName: user.displayName };\n        this.setState({ user: newUser });\n        const dbref = fire.database().ref(\"/users/\" + user.uid);\n        dbref.update(newUser);\n        this.coursesListener();\n      } else this.setState({ user: null });\n    });\n  };\n\n  coursesListener = () => {\n    const uid = this.state.user ? this.state.user.uid : null;\n    const dbref = fire.database().ref(\"users/\" + uid + \"/courses/\");\n    dbref.on(\"value\", snap => {\n      this.setState({ courses: snap.val() });\n    });\n  };\n\n  render() {\n    const signedIn = this.state.user ? true : false;\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"h-100\">\n          <NavBar user={this.state.user} signOut={signOut} />\n          {window.location.pathname.includes(\"course\") &&\n            !this.state.selectedCourse && <Redirect to=\"/\" />}\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() => (\n                <WelcomePage\n                  signIn={signInWithGoogle}\n                  userSignedIn={signedIn}\n                />\n              )}\n            />\n            <Route\n              path=\"/dashboard\"\n              exact\n              render={() => (\n                <Home\n                  courseSelected={this.courseSelectedHandler}\n                  courses={this.state.courses}\n                  user={this.state.user}\n                />\n              )}\n            />\n            {this.state.selectedCourse && (\n              <Route\n                path=\"/course\"\n                render={() => (\n                  <CourseView\n                    course={this.state.selectedCourse}\n                    uid={this.state.user.uid}\n                  />\n                )}\n              />\n            )}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}